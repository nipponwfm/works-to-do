{"version":3,"sources":["components/TaskForm.js","components/Item.js","components/ListItem.js","components/Sort.js","components/Manager.js","components/App.js","index.js"],"names":["TaskForm","this","props","onSubmit","onBlur","onDisplayTaskForm","onResetSort","className","type","name","required","value","style","marginRight","onClick","React","Component","Item","onDelete","stt","onEdit","event","state","document","getElementsByClassName","setState","status","tagNameOnEdit","placeholder","width","height","tagStatusOnEdit","ListItem","task","onChangeStatus","onChangeSearchBar","onChange","map","i","key","Sort","onSort","sortValue","setFalse","addClassSelected","display","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","href","Manager","displaying","onDisplay","margin","float","App","target","preventDefault","newTask","JSON","parse","localStorage","getItem","taskPush","unshift","setItem","stringify","reset","TaskFormisDisplay","Number","splice","length","valueName","valueStatus","taskMap","taskSort","sort","a","b","filtered","filter","toLowerCase","includes","displayTaskForm","fontSize","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7acce145.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass TaskForm extends React.Component {\r\n    render() {\r\n        var { onSubmit, onBlur, onDisplayTaskForm, onResetSort } = this.props;\r\n        return (\r\n            <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\r\n                <div className=\"panel panel-warning\">\r\n                    <div className=\"panel-heading\">\r\n                        <h3 className=\"panel-title\">Add work</h3>\r\n                    </div>\r\n                    <div className=\"panel-body\">\r\n                        <form  onSubmit={onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label>Name :</label>\r\n                                <input type=\"text\" className=\"form-control\" name=\"username\" required onBlur = {onBlur}/>\r\n                            </div>\r\n                            <label>Status :</label>\r\n                            <select className=\"form-control\" name=\"status\" required=\"required\" onBlur = {onBlur}>\r\n                                <option></option>\r\n                                <option value=\"1\">Normal</option>\r\n                                <option value=\"\">Important</option>\r\n                            </select>\r\n                            <br />\r\n                            <div className=\"text-center\">\r\n                                <button type=\"submit\" className=\"btn btn-warning\" style={{marginRight:'10px'}}\r\n                                onClick={onResetSort}>Add</button>\r\n                                <button type=\"submit\" className=\"btn btn-danger\"\r\n                                    onClick = {onDisplayTaskForm}\r\n                                >Cancel</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskForm;","import React from 'react';\r\n\r\nclass Item extends React.Component {\r\n    constructor () {\r\n        super();\r\n        this.state = {\r\n            onEdit: false\r\n        }\r\n    }\r\n    onDelete = () => {\r\n        this.props.onDelete(this.props.stt-1)\r\n    }\r\n    onEdit = (event) => {\r\n        if (this.state.onEdit) {\r\n            this.props.onEdit(\r\n                document.getElementsByClassName(\"valueInput\")[0].value, \r\n                document.getElementsByClassName(\"valueInput\")[1].value, \r\n                this.props.stt-1,\r\n                )\r\n        }\r\n        this.setState({\r\n            onEdit: !this.state.onEdit\r\n        })\r\n\r\n    }\r\n    render() {\r\n        var { stt, name, status } = this.props;\r\n        var { onEdit } = this.state;\r\n        var tagNameOnEdit = onEdit ? \r\n        <input className=\"valueInput\" placeholder={name} style={{width:'100%', height:'33px'}}/> : \r\n        `${name}`;\r\n        \r\n        var tagStatusOnEdit = onEdit ? \r\n        <select className=\"form-control changeAll valueInput\">\r\n            <option value=\"1\">Normal</option>\r\n            <option value=\"0\">Important</option>\r\n        </select> : \r\n        <div>\r\n            {status ? \r\n                <span className=\"label label-default\">\r\n                    Normal\r\n                </span>\r\n                : \r\n                <span className=\"label label-danger\">\r\n                    Important\r\n                </span>\r\n            }\r\n        </div>\r\n\r\n        return (\r\n            <tr>\r\n                <td className= \"text-center\">{stt}</td>\r\n                <td>{tagNameOnEdit}</td>\r\n                <td className=\"text-center\">\r\n                    {tagStatusOnEdit}\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <button type=\"button\" className=\"btn btn-warning\" onClick={this.onEdit}>\r\n                        <span className=\"fa fa-pencil mr-5\"></span>{onEdit?'Save':'Edit'}\r\n                    </button>&nbsp;\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={this.onDelete}>\r\n                        <span className=\"fa fa-trash mr-5\"></span>Delete\r\n                    </button>&nbsp;\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\nexport default Item;","import React from 'react';\r\nimport Item from './Item'\r\n\r\nclass ListItem extends React.Component {\r\n    render() {\r\n        var {task, onChangeStatus, onChangeSearchBar, onDelete, onEdit} = this.props;\r\n        return (\r\n            <div className=\"row mt-15\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <table className=\"table table-bordered table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"text-center\">Order</th>\r\n                                <th className=\"text-center\">Name</th>\r\n                                <th className=\"text-center\">Status</th>\r\n                                <th className=\"text-center col-xs-3\">Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td>\r\n                                    <input type=\"text\" className=\"form-control\" onChange={onChangeSearchBar} />\r\n                                </td>\r\n                                <td>\r\n                                    <select className=\"form-control changeAll\" onChange={onChangeStatus}>\r\n                                        <option value=\"-1\">All</option>\r\n                                        <option value=\"1\">Normal</option>\r\n                                        <option value=\"0\">Important</option>\r\n                                    </select>\r\n                                </td>\r\n                                <td></td>\r\n                            </tr>\r\n                            {\r\n                                task.map( (value, i) => {\r\n                                    return (\r\n                                        <Item \r\n                                            key={i} \r\n                                            stt={i+1} \r\n                                            name={task[i].name} \r\n                                            status={task[i].status}\r\n                                            onDelete = {onDelete}\r\n                                            onEdit = {onEdit}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListItem;","import React from 'react';\r\n\r\nclass Sort extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            sortValue: 0\r\n        }\r\n    }\r\n    onSort = (value) => {\r\n        this.props.onSort(value)\r\n        this.setState({\r\n            sortValue: value\r\n        })\r\n    }\r\n    setFalse = () => {\r\n        this.setState({\r\n            sortValue: 0\r\n        })\r\n        this.props.setFalse();\r\n    }\r\n    render() {\r\n        var {sortValue} = this.state;\r\n        var addClassNormal = \"fa fa-sort-alpha-asc pr-5\";\r\n        var addClassSelected = \"fa fa-sort-alpha-asc pr-5 selected\";\r\n        if (this.props.onResetSort) this.setFalse();\r\n        return (\r\n            <div className=\"dropdown\" style={{display:'inline-block'}}>\r\n                <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                    Sort<span className=\"fa fa-caret-square-o-down ml-5\"></span>\r\n                </button>\r\n                <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                    <li>\r\n                        <a role=\"button\" href='#sortedas' onClick={ () => this.onSort(0)}>\r\n                            <span className={sortValue===0?addClassSelected:addClassNormal}>Default</span>\r\n                        </a>\r\n                    </li>\r\n                    <li role=\"separator\" className=\"divider\"></li>\r\n                    <li>\r\n                        <a role=\"button\" href='#sortedas' onClick={ () => this.onSort(1)}>\r\n                            <span className={sortValue===1?addClassSelected:addClassNormal}>name: A to Z</span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a role=\"button\" href='#sorteddes' onClick={ () => this.onSort(-1)}>\r\n                            <span className={sortValue===-1?addClassSelected:addClassNormal}>name: Z to A</span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Sort;","import React from 'react';\r\nimport ListItem from './ListItem';\r\nimport Sort from './Sort';\r\n\r\nclass Manager extends React.Component {\r\n    render() {\r\n        var { displaying, onDisplay, task, onChangeStatus, onChangeSearchBar, onDelete, onEdit, onSort, onResetSort, setFalse } = this.props;\r\n        return (\r\n            <div className={ displaying ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\" }>\r\n                <button type=\"button\" className=\"btn btn-primary\" style={{margin:'0px 20px 20px 0px',float:'left'}} onClick={onDisplay}>\r\n                    <span className=\"fa fa-plus\"></span>{displaying ? 'Hide form' : 'Show form'}\r\n                </button>\r\n                <Sort onSort={onSort} onResetSort={onResetSort} setFalse= {setFalse}/>\r\n                <ListItem \r\n                    task = {task} \r\n                    onChangeStatus = {onChangeStatus} \r\n                    onChangeSearchBar={onChangeSearchBar}\r\n                    onDelete = {onDelete}\r\n                    onEdit = {onEdit}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Manager;","import React from 'react';\r\nimport TaskForm from './TaskForm';\r\nimport Manager from './Manager';\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            task: [],\r\n            name: '',\r\n            status: '',\r\n            onChangeSearchBar: '',\r\n            onChangeStatus: -1,\r\n            onResetSort: false,\r\n            TaskFormisDisplay: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage && localStorage.getItem('task'))\r\n            this.setState({\r\n                task: JSON.parse(localStorage.getItem('task'))\r\n            })\r\n        else {\r\n            localStorage.setItem('task', JSON.stringify(this.state.task))\r\n        }\r\n    }\r\n\r\n    onBlur = (event) => {\r\n        if (event.target.name === \"username\") this.setState({ name: event.target.value });\r\n        else this.setState({\r\n            status: event.target.value ? 1 : 0\r\n        })\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        var { name, status } = this.state;\r\n        var newTask = JSON.parse(localStorage.getItem('task'));\r\n        var taskPush = {\r\n            name: name,\r\n            status: status\r\n        };\r\n        newTask.unshift(taskPush);\r\n        this.setState({\r\n            task: newTask,\r\n            status: ''\r\n        })\r\n        localStorage.setItem('task', JSON.stringify(newTask))\r\n        event.target.reset()\r\n    }\r\n    onDisplayTaskForm = () => {\r\n        this.setState({\r\n            TaskFormisDisplay: !this.state.TaskFormisDisplay\r\n        })\r\n    }\r\n\r\n    onChangeStatus = (event) => {\r\n        this.setState({\r\n            onChangeStatus: Number(event.target.value)\r\n        })\r\n    }\r\n\r\n    onChangeSearchBar = (event) => {\r\n        this.setState({\r\n            onChangeSearchBar: event.target.value\r\n        })\r\n    }\r\n\r\n    onDelete = (stt) => {\r\n        var { task } = this.state;\r\n        this.setState({\r\n            task: task.splice(stt, 1)\r\n        })\r\n        if (task.length === 0) localStorage.setItem('task', JSON.stringify(task))\r\n        else localStorage.setItem('task', JSON.stringify(task));\r\n        this.setState({\r\n            task: task\r\n        })\r\n    }\r\n    onEdit = (valueName, valueStatus, stt) => {\r\n        var taskMap = this.state.task;\r\n        if (valueName !== \"\") taskMap[stt].name = valueName;\r\n        taskMap[stt].status = Number(valueStatus);\r\n        this.setState({\r\n            task: taskMap\r\n        })\r\n        localStorage.setItem('task', JSON.stringify(taskMap))\r\n    }\r\n\r\n    onSort = (value) => {\r\n        var taskSort = this.state.task;\r\n        if (value === 0) {\r\n            this.setState({\r\n                task: JSON.parse(localStorage.getItem('task'))\r\n            })\r\n        }\r\n        else {\r\n            if (value === 1) {\r\n                taskSort.sort((a, b) => {\r\n                    if (a.name > b.name) return value;\r\n                    else if (a.name < b.name) return -value;\r\n                    else return 0;\r\n                })\r\n            }\r\n            else {\r\n                taskSort.sort((a, b) => {\r\n                    if (a.name > b.name) return value;\r\n                    else if (a.name < b.name) return -value;\r\n                    else return 0;\r\n                })\r\n            }\r\n            this.setState({\r\n                task: taskSort\r\n            })\r\n        }\r\n    }\r\n    onResetSort = () => {\r\n        if(this.state.name!==\"\"&&this.state.status!==\"\") {\r\n            this.setState({\r\n                onResetSort: true\r\n            })\r\n        }\r\n    }\r\n    setFalse = () => {\r\n        this.setState({\r\n            onResetSort: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        var { TaskFormisDisplay, task, onChangeSearchBar, onChangeStatus, onResetSort } = this.state;\r\n        var filtered = task.filter((value, i) => {\r\n            return task[i].name.toLowerCase().includes(onChangeSearchBar.toLowerCase())\r\n        })\r\n        if (onChangeStatus !== -1) {\r\n            filtered = filtered.filter((value, i) => {\r\n                return task[i].status === onChangeStatus\r\n            })\r\n        }\r\n        var displayTaskForm = this.state.TaskFormisDisplay ?\r\n            <TaskForm\r\n                onDisplayTaskForm={this.onDisplayTaskForm}\r\n                onBlur={this.onBlur}\r\n                onSubmit={this.onSubmit}\r\n                onResetSort = {this.onResetSort}\r\n            /> : '';\r\n        return (\r\n            <div>\r\n                <p className='text-center' style={{ fontSize: '45px' }}>WORKS TO DO</p>\r\n                {displayTaskForm}\r\n                <Manager\r\n                    onDisplay={this.onDisplayTaskForm}\r\n                    displaying={TaskFormisDisplay}\r\n                    task={filtered}\r\n                    onChangeStatus={this.onChangeStatus}\r\n                    onChangeSearchBar={this.onChangeSearchBar}\r\n                    onDelete={this.onDelete}\r\n                    onEdit={this.onEdit}\r\n                    onSort = {this.onSort}\r\n                    onResetSort = {onResetSort}\r\n                    setFalse = {this.setFalse}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />,document.getElementById('container'));\n"],"sourceRoot":""}